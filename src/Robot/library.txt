
# Elementary material on sets


https://www.cl.cam.ac.uk/research/hvg/Isabelle/dist/library/HOL/HOL/Set.html

Please note: I have kept the names from the HOL Library in the parentheses for easy reference. Please keep these.
The actual names are in " " : these need to be specified or modified.

TIM: To avoid confusion I am going to add phrases that I shall call "pointers". (There may be a better name, in which case I'm happy to change to that, but this is the best I have come up with in a couple of seconds. The idea of a pointer is that it lets the reader know what result is being used. Not all results need pointers, since some are considered too obvious to need comment. For example, with the first one, if we had that a \in \{x. Px\} and deduced that Pa, we would not feel the need to tell the reader that we were using a basic definition of naive set theory. In such cases, rather than putting an empty pointer, I shall simply not put a pointer. I shall enclose pointers in single inverted commas, to distinguish them from names.

I shall also add comments. These are not meant to be part of the library file. They are just questions that arise as I go along.

General comment: I assume that the format of these entries is closely modelled on Isabelle. I think we need to discuss a bit more what format we want to use. For example, you use words like "If", "Then" and "Let". Maybe this is fine and makes the library more human-readable, and maybe some parser can take results in that kind of format and turn them into more of a tableau format. Maybe that's even what we agreed we would do. An alternative would be to write them in tableau format in the first place, with a line that separates hypotheses and conclusions, and no need for those words. It isn't clear to me what is best.

DEFINING SETS

"Subsets defined by comprehension"  (CollectI, CollectD)

Let $X$ be a set
Let $P$ be a property on $X$
Then $\{x: P(x)\}$ is a subset of $X$
Definition: $a \in \{x: P(x)\}$ ⟷ $P(a)$

Comments: I am taking the definition of a property on $X$ to be something along the lines of a function from $X$ to Bool. I have changed the notation from the Haskell-like P x to the mathematician's P(x). And I have put a colon inside the set notation (replacing the full stop that was there before). In general, the principle here is to stick to mathematical notation unless there is a good reason not to. I have (for now) retained the symbol ⟷ because I think there is something to be said for thinking of this syntactically as "is interchangeable with" rather than semantically as "means the same as". I'm not sure how best to convey the information that $\{x: P(x)\}$ is a subset of $X$, so the above formulation is provisional.
 

%"Set equality" (Collect_cong)

%If  $\forall x (P x \iff  Q x)$
%Then $\{x: P x \} = \{x: Q x \}$


EQUALITY OF SETS

"Definition of subset equality" (set_eqI, set_eq_iff) 

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Definition: $A = B$ ⟷ $\forall x (x \in A \iff x \in B)$ 

Pointer: 'by the definition of set equality'.

NON-MEMBERSHIP

"Definition of non-membership"  (***** name needed here *******)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $x$ be an element of $X$
Definition: $x\notin A$ ⟷ $\neg(x\in A)$

THE EMPTY SET

"Definition of the empty subset" (***** name needed *****)

Let $X$ be a set
Definition: $\emptyset = \{x\in X: FALSE\}$

"Definition of the empty subset" (***** name needed *****)

Let $X$ be a set
Let $x$ be an element of $X$
Then $x\notin\emptyset$

THE SUBSET RELATION

"Definition of set inclusion" (***** name needed *****)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Definition: $A\subseteq B$ ⟷ $\forall x\in X  x\in A \implies x\in B$

Low-priority pointer: "by the definition of the set inclusion"

"Definition of set inclusion" (***** name needed *****)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Let $x$ be an element of $X$
Suppose $A\subseteq B$
Suppose $x\in A$
Then $x\in B$

Low-priority pointer: "by the definition of set inclusion"

"The empty set is contained in everything" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Then $\emptyset \subseteq A$

"A subset of a ground set is contained in the ground set"  (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Then $A\subseteq X$


"Transitivity of set inclusion"

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Let $C$ be a subset of $X$
Suppose $A\subset B$
Suppose $B\subset C$
Then $A\subset C$

Low-priority pointer: "by the transitivity of set inclusion"
  

"Two sets are equal if each is a subset of the other  " (set_eq_subset)
Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$ 
Then $A = B$ ⟷ $A \subseteq B \wedge B \subseteq A$

Pointer: 'by the definition of set equality'.

Comment: I am adopting a convention where not only does ⟷ mean "is interchangeable with" but that if one direction feels more like an expansion and the other direction more like a de-expansion, then I'll put the two sides in the expanding direction. So most of the time ⟷ will have the more one-way feel of "can be replaced by". I have also replaced \and (which doesn't give the wedge symbol in LaTeX) by \wedge, which is what most mathematicians would write. But this is making a conscious decision to go with LaTeX rather than pseudo-English. 


BASIC SET OPERATIONS: COMPLEMENTS

"Definition of set complement" (***** name needed *****)

Let $X$ be a set
Let $A$ be a subset of $X$
Definition: $A^c = \{x\in X: x\notin A\}$

Comment: This is a slightly dangerous definition since it depends on context. I am assuming that $A$ is quite strongly typed as a subset of $X$, so that ambiguity does not arise, but I'm flagging this up, as it could cause problems, in which case we might have to stick with $X\setminus A$. 

"Definition of set complement"

Let $X$ be a set
Let $A$ be a subset of $X$
Let $x$ be an element of $X$
Then $x\in A^c$ ⟷ $x\notin A$


BASIC SET OPERATIONS: INTERSECTIONS
 
"Definition of set intersection"  (Int_def)

Let $X$ be a set
Let $A\subset X$
Let $B\subset X$
Definition: $A \cap B = \{x: x \in A \wedge x \in B \}$

Pointer: probably not needed here, but if we had a dial that let the user specify how explicit the write-up should be, then maybe we could have a pointer 'by the definition of set intersection' to be used only in very explicit write-ups. 

Comment: It's actually surprisingly difficult to imagine any situation in which this definition is directly used, so we might even want to comment it out. However, I'll leave it in for the following reason: I have a plan that every library result should be something that the program is capable of proving. The next result is naturally proved by expanding out the definition of $A\cap B$ and using some very simple reasoning, and for that one needs this result. 

Another comment: I briefly toyed with replacing the equality symbol with ⟷ but decided against it because I decided that the equality symbol already has a strong "is interchangeable with" vibe about it, so there was nothing to gain from using ⟷ instead, and some confusion might arise if one did. 

"Definition of set intersection" (Int_Iff and Int_I)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Let $x\in X$
Then $x \in A \cap B$  ⟷  $x \in A \wedge x \in B$

Pointer: same remark as above.

                                   
%"Definition of set intersection" (IntD1 )

%Let $A$ be a set
%Let $B$ be a set
%Let $c \in A \intersection B$ 
%Then $c \in A$      

%Comment: My instinct is that this should not be in the library. Also, I don't think it *is* the definition of set intersection, so much as a trivial consequence of the definition. The reason I think it shouldn't be in the library is that if we had the statement $c \in A \intersection B$, then we could obtain the hypothesis $c \in A$ by expanding using the previous result. On the other hand, I would not be against including the following result, which says essentially the same.

"An intersection of two sets is contained in each set"  (***** name needed *****)

Let $X$ be a set
Let $A$ be a subset of $X$ 
Let $B$ be a subset of $X$
Then $(A \cap B) \subseteq A$

Comment: The rationale for including this is that it enables the program to engage in high-level reasoning using set-theoretic operations rather than having to expand down and use elements. 

"An intersection of two sets is contained in each set"  (***** name needed *****)

Let $X$ be a set
Let $A$ be a subset of $X$ 
Let $B$ be a subset of $X$
Then $(A \cap B) \subseteq B$

Comment: this is here to save the program having to reason that $A\cap B = B\cap A$ and then use the previous result. But it may be that we will want the program to be good at doing quick bits of reasoning like that, in which case we will not need two results here. (Or another possibility is that at some point we generate simple reformulations of library results automatically rather than typing them all in by hand.) 

"The intersection with the empty set is empty" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Then $A\cap\emptyset = \emptyset$
Then $\emptyset\cap A = \emptyset$

"The empty set is an identity for union" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Then $A\cup\emptyset = A$
Then $\emptyset\cup A = A$

"The ground set is an identity for intersection" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Then $A\cap X = A$
Then $X\cap A = A$

"The union of a set with the ground set is the ground set" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Then $A\cup X = X$
Then $X\cup A = X$

%"Definition of set intersection" (IntD2 )

%Let $A$ be a set
%Let $B$ be a set
%Let $c \in A \cap B $
%Then $c \in B$      

%Comment: Similarly, I would replace this by $(A \intersection B) \subset B$. 

DISJOINTNESS

"Definition of disjointness" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Definition: $A$ and $B$ are disjoint ⟷ $A\cap B = \emptyset$


"Definition of disjointness" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Let $x$ be an element of $X$
Suppose $A$ and $B$ are disjoint
Suppose $x\in A$
Then $x\notin B$

Pointer: "since $A$ and $B$ are disjoint"

"Definition of disjointness" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Let $x$ be an element of $X$
Suppose $A$ and $B$ are disjoint
Suppose $x\in B$
Then $x\notin A$

Pointer: "since $A$ and $B$ are disjoint"


"Definition of disjointness" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Let $x$ be an element of $X$
Suppose $A\cap B = \emptyset$
Suppose $x\in A$
Then $x\notin B$

Pointer: "since $A$ and $B$ are disjoint"


"Definition of disjointness" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Let $x$ be an element of $X$
Suppose $A\cap B = \emptyset$
Suppose $x\in B$
Then $x\notin A$

Pointer: "since $A$ and $B$ are disjoint"


"A set and its complement are disjoint" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Then $A$ and $A^c$ are disjoint


"A set and its complement are disjoint" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Then $A\cap A^c = \emptyset$


BASIC SET OPERATIONS: UNIONS

"Definition of set union"  (Un_def}
 
Let $X$ be a set 
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Definition:  $A \union B = \{x\in X: x \in A \vee x \in B \}$
  
 
"Definition of set union" (Un_iff [simp])

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Let $x$ be an element of $X$
Then $x \in A \cup B$ ⟷ $x \in A \vee c \in B$

%"Definition of set union" ( UnI1 [elim?]) 

%Let $A$ be a set
%Let $B$ be a set
%Let $c \in A$
%Then $c \in A \cup B$
  
%"Definition of set union" ( UnI2 [elim?]) 

%Let $A$ be a set
%Let $B$ be a set
%Let $c \in B$
%Then $c \in A \cup B$

"A union of two sets contains each set"  (*****)
Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Then $A\subseteq A\cup B$

"A union of two sets contains each set"  (*****)
Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Then $B\subseteq A\cup B$

BASIC LAWS CONCERNING INTERSECTIONS, UNIONS AND COMPLEMENTS

"Intersection is commutative" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Then $A\cap B = B\cap A$


"Intersection is associative" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Let $C$ be a subset of $X$
Then $A\cap(B\cap C) = (A\cap B)\cap C$


"Union is commutative" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Then $A\cap B = B\cap A$


"Union is associative" (*****)
Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Let $C$ be a subset of $X$
Then $A\cup (B\cup C) = (A\cup B)\cup C$


"De Morgan's law I"  (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Then $(A\cap B)^c = A^c \cup B^c$


"De Morgan's law II"  (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Then $(A\cup B)^c = A^c \cap B^c$


"Union left distributes over intersection" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Let $C$ be a subset of $X$
Then $A\cup(B\cap C) = (A\cup B)\cap (A\cup C)$

"Union right distributes over intersection" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Let $C$ be a subset of $X$
Then $(A\cap B)\cup C = (A\cup C)\cap (B\cup C)$


"Intersection left distributes over union" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Let $C$ be a subset of $X$
Then $A\cap(B\cup C) = (A\cap B)\cup (A\cap C)$

"Intersection right distributes over union" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Let $C$ be a subset of $X$
Then $(A\cup B)\cap C = (A\cap C)\cup (B\cap C)$


BASIC SET OPERATIONS: DIFFERENCES

"Definition of set difference" (set_diff_eq)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Definition: $A \setminus B = \{x: x \in A \wedge x \notin B \}$

"Definition of set difference" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Then $A\setminus B = A\cap B^c$

"Definition of set difference" (Diff_iff [simp])

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Let $x$ be an element of $X$
Then  $x \in A \setminus B$ ⟷ $x \in A \wedge x\notin B$

%"Definition of set difference " ( DiffD1 )

%Let $A$ be a set
%Let $B$ be a set
%Let $c \in A \setminus B$
%Then $c \in A$

"The difference of two sets is contained in the first set" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Then $A\setminus B\subseteq A$

"The difference of two sets is disjoint from the second set" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Then $(A\setminus B)\cap B=\emptyset$

BASIC SET OPERATIONS: SYMMETRIC DIFFERENCES

"Definition of symmetric difference" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Then $A\triangle B$ is a subset of $X$
Definition: $A\triangle B = (A\setminus B) \cup (B\setminus A)$

"Alternative definition of symmetric difference" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Then $A\triangle B = \{x\in X: (x\in A \wedge x\notin B) \vee (x\in B \wedge x\notin A)\}$

"Alternative definition of symmetric difference" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Then $A\triangle B = (A\cup B) \setminus (A\cap B)$

BASIC DEFINITIONS CONCERNING FUNCTIONS

"Definition of the domain of a function" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f:X \to Y$
Definition: $\dom(f) = X$

"Definition of the range of a function" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f:X \to Y$
Definition: $\ran(f) = Y$

"Criterion for two functions to be equal" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f:X \to Y$
Let $g:X \to Y$
Then $f=g$ ⟷ $\forall x\in X  f(x) = g(x)$

Pointer: "by the condition for two functions to be equal" 

"Definition of the identity function on a set" (*****)

Let $X$ be a set
Then $\id_X:X \to X$
Definition: $\forall x\in X  \id_X(x) = x$

"Definition of the composition of two functions" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $Z$ be a set
Let $f:X \to Y$
Let $g:Y \to Z$
Then $g\circ f:X \to Z$
Definition: $g\circ f(x) = g(f(x))$

"Identity functions are left identities under composition"  (*****)

Let $X$ be a set
Let $Y$ be a set
Let $g:Y \to Z$
Then $g\circ\id_X = g$

"Identity functions are right identities under composition" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f:X \to Y$
Then $\id_Y\circ f = f$

IMAGES 

"Definition of image of a set under a function" (image)

Let $X$ be a set
Let $Y$ be a set
Let $f : X \to Y$
Let $A$ be a subset of $X$
Then $f ` A$ is a subset of $Y$
Definition: $f ` A = \{y\in Y: \exists x \in A  f(x) = y \}$

"Definition of the image of a set under a function "  (image_iff)

Let $X$ be a set
Let $Y$ be a set
Let $f : X \to Y$
Let $A$ be a subset of $X$
Let $y$ be an element of $Y$
Then $y \in f ` A$ ⟷ $\exists x \in X  x\in A \wedge f(x) = z$

Low-priority pointer: 'by the definition of f ` A'.

"Defining a set as an image"  (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f : X \to Y$
Let $A$ be a subset of $X$
Then $\{f(x): x\in A\}$ is a subset of $Y$
Definition: $\{f(x): x\in A\} = f ` A$

"Membership of a set defined as an image" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f : X \to Y$
Let $A$ be a subset of $X$
Let $y$ be an element of $Y$
Then $y\in\{f(x): x\in A\}$ ⟷ $\exists x\in X   x\in A \wedge f(x) = y$


"Definition of image of a set under a function " (imageI)

Let $X$ be a set
Let $Y$ be a set
Let $f : X \to Y$
Let $A$ be a subset of $X$
Suppose $x \in A$ 
Then $f x \in  f ` A$

INVERSE IMAGES

"Definition of inverse image of a set" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f:X\to Y$
Let $B$ be a subset of $Y$
Then $f^{-1}(B)$ is a subset of $X$
Definition: $f^{-1}(B)=\{x\in X: f(x)\in B\}$

"Definition of inverse image of a set" (*****)
Let $X$ be a set
Let $Y$ be a set
Let $f:X\to Y$
Let $B$ be a subset of $Y$
Then $x\in f^{-1}(B)$ ⟷ $f(x)\in B$

PROPERTIES OF IMAGES

"Basic property of the image of the union of two sets under a function"  (image_Un)

Let $X$ be a set
Let $Y$ be a set
Let $f : X \to Y$
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Then $f ` (A \cup B) = f ` A \cup f ` B$

Low-priority pointer: 'since taking an image preserves unions'.


  
%"Basic property of the image of a set under a function " (image_subsetI) 

%Let $A$ be a set
%Let $B$ be a set
%Let $f$ be a function
%Assume $ \forall x \in A.  f x \in B$ 
%Then $f ` A \subseteq B$

%Comment: This is another result that I think might not be wanted in the library. Suppose, for example, that we found ourselves wanting to prove that $f ' A \subseteq B$. This result would tell us that we could replace the target by $ \forall x \in A. f x \in B$. But we would get that by first expanding, which would replace the target by $y \in f ` A \implies y \in B$ and then by expanding again to get $(\exists x. x \in A \wedge f(x) = y) \implies y \in B$, which after tidying becomes $\forall x. (x \in A \wedge f x = y) \implies y \in B$ and finally after further tidying (to remove the redundant y) $\forall x. x\in A \implies f x \in B$. All these moves would I think be done with no difficulty by the program, so the library result would not be helping, except that it would be doing all these easy steps in one go. But that I think might be a question more about the write-up -- yes, we don't want a write-up that is full of boring tidying steps, but I think we can find ways of judging which steps fall into that category and omitting them from the write-up. Again, I think this is something we will all need to discuss.


%"Basic property of the image of a set under a function "  (subset_image_iff)

%Let $A$ be a set
%Let $B$ be a set
%Let $f$ be a function
%Then $B \subseteq f ` A$ iff $\exists C \subseteq A. B = f ` C$

%Comment: This again feels like a result that we might not want. I can't see when it might be used, and if it was needed, it would feel more humanly natural to prove it rather than to quote it. 

"The image of the empty set under a function is the empty set" (image_empty [simp])

Let $X$ be a set
Let $Y$ be a set
Let $f : X \to Y$
Then $f ` \emptyset = \emptyset$


"If the image of a set under a function is the empty set then the set is the empty set " (image_is_empty [only if])

Let $X$ be a set
Let $Y$ be a set
Let $f : X \to Y$
Suppose $f ` A = \emptyset$
Then $A = \emptyset$

Pointer: 'since the image of a non-empty set is non-empty'.


%"Equal sets under equal functions have equal images"  (image_cong)
 
%Let $f$ be a function
%Let $g$ be a function
%Let $A$ be a set
%Let $B$ be a set

%Assume $A = B$ 
%Assume $\forall x \in B. f x = g x$
%Then  $f ` A = g ` B$

%Comment: This feels like a result we don't obviously want. In particular, I think having two objects and hypothesizing that they are equal shouldn't be necessary -- I would hope that our program could handle equality well enough not to need help from the library of this kind. But if someone can think of a situation where this library result might make it easier for a program to find a proof, I might change my mind, but I can't think of one.


"The image of an intersection is contained in the intersection of the images" (image_Int_subset)

Let $X$ be a set
Let $Y$ be a set
Let $f:X \to Y$
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Then $f ` (A \cap B) \subseteq f ` A \cap f ` B$

"The image of a difference contains the difference of the images"      (image_diff_subset)

Let $X$ be a set
Let $Y$ be a set
Let $f:X \to Y$
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Then $f ` A \setminus f ` B \subseteq f ` (A \setminus B)$


PROPERTIES OF INVERSE IMAGES

"The inverse image of the empty set is empty" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f:X \to Y$
Then $f^\leftarrow(\emptyset) = \emptyset$

Comment: I haven't specified that one empty set is the empty subset of $Y$ and the other is the empty subset of $X$. 

"Inverse images preserve unions" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f:X \to Y$
Let $A$ be a subset of $Y$
Let $B$ be a subset of $Y$
Then $f^\leftarrow(A\cup B) = f^\leftarrow(A) \cup f^\leftarrow(B)$

Pointer: "since inverse images preserve unions" 

"Inverse images preserve intersections" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f:X \to Y$
Let $A$ be a subset of $Y$
Let $B$ be a subset of $Y$
Then $f^\leftarrow(A\cap B) = f^\leftarrow(A) \cap f^\leftarrow(B)$

Pointer: "since inverse images preserve intersections" 

"Inverse images preserve complements" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f:X \to Y$
Let $A$ be a subset of $Y$
Then $f^\leftarrow(A^c) = (f^\leftarrow(A))^c$

Pointer: "since inverse images preserve complements"

"Inverse images preserve differences" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f:X \to Y$
Let $A$ be a subset of $Y$
Let $B$ be a subset of $Y$
Then $f^\leftarrow(A\setminus B) = f^\leftarrow(A) \setminus f^\leftarrow(B)$

"Inverse images preserve symmetric differences" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f:X \to Y$
Let $A$ be a subset of $Y$
Let $B$ be a subset of $Y$
Then $f^\leftarrow(A\triangle B) = f^\leftarrow(A) \triangle f^\leftarrow(B)$


PROPERTIES THAT COMBINE IMAGES AND INVERSE IMAGES

"When the image of a set is contained in another set"  (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f : X \to Y$
Let $A$ be a subset of $X$
Let $B$ be a subset of $Y$  
Then $A\subset f^\leftarrow(B)$ ⟷ $f(A)\subset B$

"When a set is a subset of an image" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f : X \to Y$
Let $A$ be a subset of $X$
Let $B$ be a subset of $Y$  
Then $B \subseteq f ` A \implies B = f ` f^\leftarrow (B)$  
  
Comment: I found that some people use the notation $f^\leftarrow(A)$ for $f^{-1}(A)$. I find that quite readable and it would solve the contextual parsing problem. 

INJECTIONS, SURJECTIONS AND BIJECTIONS

"Definition of an injection" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f:X \to Y$
Definition: is_injection($f$) ⟷ $\forall x\in X  \forall y\in X  f(x) = f(y) \implies x = y$

"Alternative definition of an injection" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f:X \to Y$
Definition: is_injection($f$) ⟷ $\forall x\in X  \forall y\in X  x \ne y \implies f(x) \ne f(y)$

"Definition of a surjection" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f:X \to Y$
Definition: is_surjection($f$) ⟷ $\forall y\in Y  \exists x\in X  f(x) = y$


"Definition of a surjection" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f:X \to Y$
Definition: is_surjection($f$) ⟷ $f ` X = Y$

"Definition of a bijection" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f:X \to Y$
Definition: is_bijection($f$) ⟷ is_injection($f$) and is_surjection($f$)


"Definition of a left inverse" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f:X \to Y$
Let $g:Y \to X$
Definition: is_left_inverse($(g,f)$) ⟷ $g\circ f = \id_X$

"Definition of a left inverse" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f:X \to Y$
Let $g:Y \to X$
Then is_left_inverse($g,f$) ⟷ $\forall x\in X  g(f(x))=x$

"Definition of a right inverse" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f:X\to Y$
Let $g:Y\to X$
Then is_right_inverse($g,f$) ⟷ $f\circ g = \id_Y$


"Definition of a right inverse" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f:X\to Y$
Let $g:Y\to X$
Then is_right_inverse($g,f$) ⟷ $\forall y\in Y  f(g(y))=y$


"Injections and left inverses" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f:X\to Y$
Then is_injection($f$) ⟷ $\exists g:Y\to X$ is_left_inverse($g,f$)


"Injections and right inverses" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f:X\to Y$
Then is_surjection($f$) ⟷ $\exists g:Y\to X$ is_right_inverse($g,f$)

"Definition of an inverse" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f:X\to Y$
Let $g:Y\to X$
Definition: is_inverse($g,f$) ⟷ is_left_inverse($g,f$) \wedge is_right_inverse($g,f$)

"Bijections and inverses" (*****)

Let $X$ be a set
Let $Y$ be a set
Let $f:X\to Y$
Then $\exists g:Y\to X$ is_inverse($g,f$) ⟷ is_bijection($f$)


PROPER SUBSETS

"Strict subset definition " (psubset_eq)
 
Let $X$ be a set 
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Definition: $A \subsetneq B$ iff $A \subseteq B  \and A \neq B$
 

"Strict subsets are subsets"    (psubset_imp_subset)

Let $A$ be a set
Let $B$ be a set
Suppose $A \subsetneq B$
Then $A \subseteq B$
 
Comment: I've left this in because I think it might possibly be convenient to have it sometimes.
 
"Transitivity of proper subset relation I" (psubset_trans)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Let $C$ be a subset of $X$
Suppose $A \subsetneq B$
Suppose $B \subsetneq C$
Then $A \subsetneq C$
 
"Transitivity of proper subset relation II" (psubset_subset_trans)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Let $C$ be a subset of $X$
Suppose $A \subsetneq B$
Suppose $B \subseteq C$
Then $A \subsetneq C$ 

"Transitivity of proper subset relation III" (subset_psubset_trans)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Let $C$ be a subset of $X$
Suppose $A \subseteq B$
Suppose $B \subsetneq C$
Then $A \subsetneq C$ 
  
 
"Definition of set inclusion specialized to proper subsets" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Let $x$ be an element of $X$
Suppose $A\subsetneq B$
Suppose $x\in A$
Then $x\in B$ 

  
"Definition of strict subset relation and definition of set difference" (psubset_imp_ex_mem)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Suppose $A \subseteq B$
Then $A\subsetneq B$ ⟷ $\exists x\in X  x \in B \wedge x\notin A$
 
Pointer: 'since A is a strict subset of B'.

"Alternative definition of strict subset relation and definition of set difference" (*****)

Let $X$ be a set
Let $A$ be a subset of $X$
Let $B$ be a subset of $X$
Suppose $A \subseteq B$
Then $A\subsetneq B$ ⟷ $B\setminus A \ne \emptyset$

THE POWER SET

"The power set of a set is a set"  (*****)

Let X be a set
Then power_set(X) is a set

"Defining property of power set" (*****)

Let X be a set
Then A\in power_set(X) ⟷ A\subset X

"Power set of a subset"  (*****)

Let X be a set
Let A be a subset of X
Then power_set(A) = \{B\subset X: B\subset A\}

SET FAMILIES AND THEIR INTERSECTIONS AND UNIONS

"The intersection of a family of sets" (*****)

Let X be a set
Let \mathcal{A} be a subset of power_set(X)
Then \bigcap(\mathcal{A}) is a subset of X
Definition: \bigcap(\mathcal{A}) = \{x\in X: \forall A\in\mathcal{A}  x\in A\}

"The intersection of a family of sets" (*****)

Let X be a set
Let \mathcal{A} be a subset of power_set(X)
Let A be a subset of X
Let x\in X
Suppose A\in\mathcal{A}
Suppose x\in\bigcap(\mathcal{A})
Then x\in A

"The union of a family of sets" (*****)

Let X be a set
Let \mathcal{A} be a subset of power_set(X)
Then \bigcup(\mathcal{A}) is a subset of X
Definition: \bigcup(\mathcal{A}) = \{x\in X: \exists A\in\mathcal{A}  x\in A\}

"The union of a family of sets" (*****)

Let X be a set
Let \mathcal{A} be a subset of power_set(X)
Let x\in X
Suppose x\in\bigcup(\mathcal{A})
Then \exists A\subset X  A\in\mathcal{A} \wedge x\in A

USE OF INDEX SETS

"Defining property of arbitrary intersection" (*****)

Let X be a set
Let \Gamma be a set
Let A: \Gamma \to power_set(X)
Then x\in\bigcap_{\gamma\in\Gamma} A(\gamma) ⟷ \forall \gamma\in\Gamma  x\in A(\gamma)


"Basic property of arbitrary intersection" (*****)

Let X be a set
Let \Gamma be a set
Let A: \Gamma \to power_set(X)
Let \delta be an element of \Gamma
Then \bigcap_{\gamma\in\Gamma} A(\gamma) \subseteq A(\delta)


"Defining property of arbitrary union" (*****)

Let X be a set
Let \Gamma be a set
Let A: \Gamma \to power_set(X)
Then x\in\bigcup_{\gamma\in\Gamma} A(\gamma) ⟷ \exists \gamma\in\Gamma  x\in A(\gamma)


"Basic property of arbitrary union" (*****)

Let X be a set
Let \Gamma be a set
Let A: \Gamma \to power_set(X)
Let \delta be an element of \Gamma
Then A(\delta) \subseteq \bigcup_{\gamma\in\Gamma} A(\gamma) 


"Images preserve arbitrary unions" (*****)

Let X be a set
Let Y be a set
Let f:X\to Y
Let \Gamma be a set
Let A: \Gamma \to power_set(X)
Then f ` \bigcup_{\gamma\in\Gamma} A(\gamma)  = \bigcup_{\gamma\in\Gamma} f ` A(\gamma)

"The image of an arbitrary intersection is contained in the intersection of the images" (*****)

Let X be a set
Let Y be a set
Let f:X\to Y
Let \Gamma be a set
Let A: \Gamma \to power_set(X)
Then f ` \bigcap_{\gamma\in\Gamma} A(\gamma) \subseteq \bigcup_{\gamma\in\Gamma} f ` A(\gamma)

"Inverse images preserve arbitrary unions"

Let X be a set
Let Y be a set
Let f:X\to Y
Let \Gamma be a set
Let A: \Gamma \to power_set(X)
Then f^\leftarrow( \bigcup_{\gamma\in\Gamma} A(\gamma) ) = \bigcup_{\gamma\in\Gamma} f^\leftarrow A(\gamma)

"Inverse images preserve arbitrary intersections"

Let X be a set
Let Y be a set
Let f:X\to Y
Let \Gamma be a set
Let A: \Gamma \to power_set(X)
Then f^\leftarrow( \bigcap_{\gamma\in\Gamma} A(\gamma) ) = \bigcap_{\gamma\in\Gamma} f^\leftarrow A(\gamma)

ORDERED PAIRS, TUPLES, AND CARTESIAN PRODUCTS

"Defining property of ordered pairs"  (*****)

Let X be a set
Let Y be a set
Let x be an element of X
Let x' be an element of X
Let y be an element of Y
Let y' be an element of Y
Then (x,y) = (x',y') ⟷ x = x' \wedge y = y'

Comment: I don't know how happy the parser will be with primed variables. I'm happy to have separate letters instead or to use x_1 and x_2 etc. if that is deemed to be more convenient.

"Definition of Cartesian product" (*****)

Let X be a set
Let Y be a set
Then X \times Y is a set
Definition: X \times Y = \{(x,y) : x \in X \wedge y\in Y\}

Comment: There are other ways one might imagine doing this.

"Definition of projection map I" (*****)

Let X be a set
Let Y be a set
Then \pi_X:X\times Y\to X
Definition: \forall(x,y)\in X\times Y  \pi_X:(x,y)\mapsto x

Comment: This chooses once and for all a notation for the projection map, which we might not always want to do. We might, for instance, prefer to say that a function from X\times Y to X is the projection map to the first coordinate if it always maps (x,y) to x. 

"Definition of projection map II" (*****)

Let X be a set
Let Y be a set
Then \pi_Y:X\times Y\to Y
Definition: \forall(x,y)\in X\times Y  \pi_1:(x,y)\mapsto y

"Universal property of Cartesian product" (*****)

Let X be a set
Let Y be a set
Let A be a set
Let f:A \to X
Let g:A \to Y
Then \exists h:A\to X\times Y  \forall a\in A  f(a) = \pi_X(h(a)) \wedge g(a) = \pi_Y(h(a))

Comment: We can easily deduce from this that h(a) = (f(a), g(a)). Indeed, we know it's some (x,y) and we immediately get that f(a) = x and g(a) = y. The question arises whether we should nevertheless store this in the library. At the moment I incline towards not doing so, as that would give the program a slight nudge in the direction of using universal properties rather than getting grubby with elements.


"Abstract definition of Cartesian product" (*****)

Let X be a set
Let Y be a set
Let W be a set
Let \pi_X:W\to X
Let \pi_Y:W\to Y
Definition: is_abstract_Cartesian_product(W,\pi_X,\pi_Y,X,Y) ⟷ \forall A:set  \forall f:A\to X  \forall g:A\to Y  \exists h:A\to W  f = \pi_X\circ h \wedge g = \pi_Y\circ h


"Uniqueness property of abstract Cartesian product" (*****)

Let X be a set
Let Y be a set
Let W be a set
Let \pi_X:W\to X
Let \pi_Y:W\to Y
Let V be a set
Let \rho_X:V\to X
Let \rho_Y:V\to Y
Suppose is_abstract_Cartesian_product(W,\pi_X,\pi_Y,X,Y)
Suppose is_abstract_Cartesian_product(V,\rho_X,\rho_Y,X,Y)
Then \exists \theta:W\to V is_bijection(\theta) \wedge \pi_X = \rho_X\circ\theta \wedge \pi_Y = \rho_Y\circ\theta


"Defining property of ordered triples" (*****)

Let X be a set
Let Y be a set
Let Z be a set
Let x be an element of X
Let x' be an element of X
Let y be an element of Y
Let y' be an element of Y
Let z be an element of Z
Let z' be an element of Z
Then (x,y,z) = (x',y',z') ⟷ x = x' \wedge y = y' \wedge z = z'

Comment: I am going for a one, two, three, many ... approach here.


"Definition of threefold Cartesian product" (*****)

Let X be a set
Let Y be a set
Let Z be a set
Then X \times Y \times Z is a set
Definition: X \times Y \times Z = \{(x,y,z) : x \in X \wedge y\in Y \wedge z\in Z\}

Comment: There are other ways one might imagine doing this.

"Definition of threefold projection map I" (*****)

Let X be a set
Let Y be a set
Let Z be a set
Then \pi_X:X\times Y\times Z \to X
Definition: \forall(x,y,z)\in X\times Y\times Z  \pi_X:(x,y,z)\mapsto x


"Definition of threefold projection map II" (*****)

Let X be a set
Let Y be a set
Let Z be a set
Then \pi_Y:X\times Y\times Z \to Y
Definition: \forall(x,y,z)\in X\times Y\times Z  \pi_Y:(x,y,z)\mapsto y

"Definition of threefold projection map III" (*****)

Let X be a set
Let Y be a set
Let Z be a set
Then \pi_Z:X\times Y\times Z \to Z
Definition: \forall(x,y,z)\in X\times Y\times Z  \pi_Z:(x,y,z)\mapsto z


"Universal property of threefold Cartesian product" (*****)

Let X be a set
Let Y be a set
Let Z be a set
Let A be a set
Let f:A \to X
Let g:A \to Y
Let h:A \to Z
Then \exists k:A\to X\times Y\times Z  \forall a\in A  f(a) = \pi_X(k(a)) \wedge g(a) = \pi_Y(k(a)) \wedge h(a) = \pi_Z(k(a))

"Abstract definition of threefold Cartesian product" (*****)

Let X be a set
Let Y be a set
Let Z be a set
Let W be a set
Let \pi_X:W\to X
Let \pi_Y:W\to Y
Let \pi_Z:W\to Z
Definition: is_abstract_Cartesian_product(W,\pi_X,\pi_Y,\pi_Z,X,Y,Z) ⟷ \forall A:set  \forall f:A\to X  \forall g:A\to Y \forall h:A\to Z \exists k:A\to W  f = \pi_X\circ k \wedge g = \pi_Y\circ k \wedge h = \pi_Z\circ k


"Uniqueness property of abstract Cartesian product" (*****)

Let X be a set
Let Y be a set
Let Z be a set
Let W be a set
Let \pi_X:W\to X
Let \pi_Y:W\to Y
Let \pi_Z:W\to Z
Let V be a set
Let \rho_X:V\to X
Let \rho_Y:V\to Y
Let \rho_Z:V\to Z
Suppose is_abstract_Cartesian_product(W,\pi_X,\pi_Y,\pi_Z,X,Y,Z)
Suppose is_abstract_Cartesian_product(V,\rho_X,\rho_Y,\rho_Z,X,Y,Z)
Then \exists \theta:W\to V is_bijection(\theta) \wedge \pi_X = \rho_X\circ\theta \wedge \pi_Y = \rho_Y\circ\theta \wedge \pi_Z = \rho_Z\circ\theta

"The Cartesian product is an abstract Cartesian product" (*****)

Let X be a set
Let Y be a set
Let Z be a set
Then is_abstract_Cartesian_product(X\times Y\times Z,\pi_X,\pi_Y,\pi_Z,X,Y,Z)

Comment: This follows very obviously from earlier results so it's questionable whether it's worth including.


"Associativity of Cartesian product I" (*****)

Let X be a set
Let Y be a set
Let Z be a set
Then is_abstract_Cartesian_product(X\times(Y\times Z),\pi_X,\pi_Y\circ\pi_{Y\times Z},\pi_Z\circ\pi_{Y\times Z},X,Y,Z)

Comment: This is my attempt to put in the fact that X\times(Y\times Z) basically means the same as X\times Y\times Z.

"Associativity of Cartesian product II" (*****)

Let X be a set
Let Y be a set
Let Z be a set
Then is_abstract_Cartesian_product((X\timesY)\times Z,\pi_X\circ\pi_{X\times Y},\pi_Y\circ\pi_{X\times Y},\pi_Z,X,Y,Z)

Comment: From the last few results we get that X\times(Y\times Z) is isomorphic in an appropriate sense to (X\times Y)\times Z. But it may well be that all this can be done in a much better way.


# Relations and their properties

SET-THEORETIC DEFINITION OF RELATIONS

Let X be a set
Let A be a subset of X\times X
Let R be a relation on X
Definition: associated_relation(R,A) ⟷  \forall x\in X  \forall y\in X  x R y \iff (x,y)\in A
Definition: associated_subset(A,R) ⟷ associated_relation(R,A)

Comment: I have used infix notation in this section, but I do not object if we want to change x R y to R(x,y).


EQUIVALENCE RELATIONS

"Definition of reflexive relation" (*****)

Let X be a set
Let R be a relation on X
Definition: is_reflexive(R) ⟷ \forall x\in x  x R x


"Definition of symmetric relation"  (*****)

Let X be a set
Let R be a relation on X
Definition: is_symmetric(R) ⟷ \forall x\in X \forall y\in X  x R y \iff y R x

"Definition of transitive relation" (*****)

Let X be a set
Let R be a relation on X
Definition: is_transitive(R) ⟷ \forall x\in X \forall y\in X \forall z\in X  x R y \wedge y R z \implies x R z

"Definition of equivalence relation" (*****)

Let X be a set
Let R be a relation on X
Definition: equivalence_relation(R) ⟷ is_reflexive(R) \wedge is_symmetric(R) \wedge is_transitive(R)

"Definition of equivalence class" (*****)

Let X be a set
Let R be a relation on X
Let x\in X
Suppose equivalence_relation(R)
Definition: equivalence_class(x) = \{y\in X: x R y\}

"Definition of partition" (*****)

Let X be a set
Let \mathcal{P} be a subset of power_set(X)
Definition: is_partition(\mathcal{P},X) ⟷  X = \bigcup(\mathcal{P}) \wedge \forall A\in\mathcal{P} \forall B\in\mathcal{P} A = B \vee are_disjoint(A,B)

"Alternative definition of partition" (*****)

Let X be a set
Let \mathcal{P} be a subset of power_set(X)
Then is_partition(\mathcal{P}, X) ⟷ \forall x\in X  ( \exists A\subset X  A\in\mathcal{P} \wedge x\in A ) \wedge ( \forall A\subset X \forall B\subset X A\in\mathcal{P} \wedge B\in\mathcal{P} \wedge x\in A \wedge x\in B \implies A = B )

Comment: I would prefer just to be able to say that there exists a unique A\in\mathcal{P} such that x\in A, but it's not clear to me how we would handle \exists ! x  P(x). Should that be defined in the library somehow, or hard-wired into the program in the same way that the quantifiers themselves are, or what? A discussion is needed.

"Equivalence classes form a partition" (*****)

Let X be a set
Let R be a relation on X
Then is_partition( \{equivalence_class(x): x\in X\}, X )

Comment: Here some type inference seems important, as the definition of the set \{equivalence_class(x): x\in X\} makes sense (given earlier results in the library) only if it is understood that equivalence_class is a function from X to power_set(X). 

"A partition defines an equivalence relation" (*****)

Let X be a set
Let \mathcal{P} be a subset of power_set(X)
Let R be a relation on X
Suppose is_partition(\mathcal{P},X)
Suppose \forall x \forall y  x R y \iff \exists A\subset X  A\in\mathcal{P} \wedge x\in A \wedge y\in A
Then equivalence_relation(R)


ORDERINGS

"Definition of antisymmetric relation" (*****)

Let X be a set
Let R be a relation on X
Definition: is_antisymmetric(R) ⟷ \forall x\in X \forall y\in X  x R y \wedge y R x \implies x = y

"Definition of a partial order" (*****)

Let X be a set
Let \preceq be a relation on X
Definition: is_partial_order(\preceq) ⟷ is_reflexive(\preceq) \wedge is_transitive(\preceq) \wedge is_antisymmetric(\preceq)

"Definition of a poset" (*****)
Let X be a set
Let \preceq be a relation on X
Let \tilde{X} = (X, \preceq)
Definition: is_poset(\tilde{X}) ⟷ is_partial_order(\preceq)

"Definition of a maximal element" (*****)

Let X be a set
Let \preceq be a relation on X
Let \tilde{X} = (X, \preceq)
Let A be a subset of X
Let x be an element of X
Suppose is_poset(\tilde{X})
Suppose x\in A
Definition: is_maximal(x,A) ⟷ \forall a\in A  x\preceq a \implies a = x


"Definition of a minimal element" (*****)

Let X be a set
Let \preceq be a relation on X
Let \tilde{X} = (X, \preceq)
Let A be a subset of X
Let x be an element of X
Suppose is_poset(\tilde{X})
Suppose x\in A
Definition: is_minimal(x,A) ⟷ \forall a\in A  a\preceq x \implies a = x


"Definition of a total order" (*****)

Let X be a set
Let \preceq be a partial order on X
Definition: is_total_order(\preceq) ⟷ \forall x\in X \forall y\in X  x\preceq y \vee y\preceq x

"Definition of a toset" (*****)

Let X be a set
Let \preceq be a relation on X
Let \tilde{X} = (X, \preceq)
Definition: is_toset(\tilde{X}) ⟷ is_total_order(\preceq)


"Definition of a well ordering" (*****)

Let X be a set
Let \preceq be a total order on X
Definition: is_well_ordering(\preceq) ⟷ \forall A\subset X  A\ne\emptyset => \exists x\in X  x\in A \wedge is_minimal(x,A)

"Definition of a woset" (*****)

Let X be a set
Let \preceq be a relation on X
Let \tilde{X} = (X, \preceq)
Definition: is_woset(\tilde{X}) ⟷ is_well_ordering(\preceq)


"Well-ordering principle" (*****)

Let X be a set
Then \exists \preceq  is_woset((X, \preceq))

Comment: For formatting purposes it would be nice if there could be enough type inference for the program to work out that \prec has to be a relation on X, which is pretty clear given the preceding definitions. But without that one could write something like \exists \preceq: relation on X  is_woset((X,\preceq)).

Comment: We might want to tag this as a result that is equivalent to AC, in case a user wants to try to find proofs that avoid AC, or at least we want the program to flag up occasions when it uses AC. 


BINARY OPERATIONS AND THEIR PROPERTIES

Comment: I have treated the notion of binary operation as a primitive. 

"Associating functions with binary operations" (*****)

Let X be a set
Let \circ be a binary operation on X
Let f:X\times X \to X
Then associated_function(f,\circ) ⟷ \forall x\in X \forall y\in X  f(x,y) = x\circ y

"Associating binary operations with functions" (*****)

Let X be a set
Let \circ be a binary operation on X
Let f:X\times X \to X
Then associated_binary_operation(\circ,f) ⟷ associated_function(f,\circ)


"Definition of commutativity" (*****)

Let X be a set
Let \circ be a binary operation on X
Definition: is_commutative(\circ) ⟷ \forall x\in X \forall y\in X  x\circ y = y\circ x

"Definition of commutativity" (*****)

Let X be a set
Let \circ be a binary operation on X
Let x be an element of X
Let y be an element of X
Suppose is_commutative(\circ)
Then x\circ y = y\circ x


"Definition of associativity" (*****)

Let X be a set
Let \circ be a binary operation on X
Definition: is_associative(\circ) ⟷ \forall x\in X \forall y\in X \forall z\in X  x\circ(y\circ z) = (x\circ y)\circ z

"Definition of associativity" (*****)
Let X be a set
Let \circ be a binary operation on X
Let x be an element of X
Let y be an element of X
Let z be an element of X
Suppose is_associative(\circ)
Then x\circ(y\circ z) = (x\circ y)\circ z


"Definition of left identity" (*****)

Let X be a set
Let \circ be a binary operation on X
Let e be an element of X
Definition: is_left_identity(e,\circ) ⟷ \forall x\in X  e\circ x = x

"Definition of left identity" (*****)

Let X be a set
Let \circ be a binary operation on X
Let e be an element of X
Let x be an element of X
Suppose is_left_identity(e,\circ)
Then e\circ x = x

"Definition of right identity" (*****)

Let X be a set
Let \circ be a binary operation on X
Let e be an element of X
Definition: is_right_identity(e,\circ) ⟷ \forall x\in X  x\circ e = x

"Definition of right identity" (*****)

Let X be a set
Let \circ be a binary operation on X
Let e be an element of X
Let x be an element of X
Suppose is_right_identity(e,\circ)
Then x\circ e = x

"Definition of two-sided identity" (*****)

Let X be a set
Let \circ be a binary operation on X
Let e be an element of X
Definition: is_identity(e,\circ) ⟷ \forall x\in X  e\circ x = x \wedge x\circ e = x

"Higher-level definition of two-sided identity" (*****)

Let X be a set
Let \circ be a binary operation on X
Let e be an element of X
Then is_identity(e,\circ) ⟷ is_left_identity(e,\circ) \wedge is_right_identity(e,\circ)

"Definition of two-sided identity" (*****)

Let X be a set
Let \circ be a binary operation on X
Let e be an element of X
Let x be an element of X
Suppose is_identity(e,\circ)
Then e\circ x = x
Then x\circ e = x


"Definition of left inverse" (*****)

Let X be a set
Let \circ be a binary operation on X
Let x be an element of X
Let y be an element of X
Let e be an element of X
Suppose is_identity(e,\circ)
Definition: is_left_inverse(y,x,\circ) ⟷ y\circ x = e

"Definition of left inverse" (*****)

Let X be a set
Let \circ be a binary operation on X
Let x be an element of X
Let y be an element of X
Let e be an element of X
Suppose is_identity(e,\circ)
Suppose is_left_inverse(y,x,\circ)
Then y\circ x = e

"Definition of right inverse" (*****)

Let X be a set
Let \circ be a binary operation on X
Let x be an element of X
Let y be an element of X
Let e be an element of X
Suppose is_identity(e,\circ)
Definition: is_right_inverse(y,x,\circ) ⟷ x\circ y = e

"Definition of right inverse" (*****)

Let X be a set
Let \circ be a binary operation on X
Let x be an element of X
Let y be an element of X
Let e be an element of X
Suppose is_identity(e,\circ)
Suppose is_right_inverse(y,x,\circ)
Then x\circ y = e

"Definition of two-sided inverse" (*****)

Let X be a set
Let \circ be a binary operation on X
Let x be an element of X
Let y be an element of X
Let e be an element of X
Suppose is_identity(e,\circ)
Definition: is_inverse(y,x,\circ,e) ⟷ y\circ x = e \wedge x\circ y = e

"Higher-level definition of two-sided inverse" (*****)

Let X be a set
Let \circ be a binary operation on X
Let x be an element of X
Let y be an element of X
Let e be an element of X
Suppose is_identity(e,\circ)
Then is_inverse(y,x,\circ,e) ⟷ is_left_inverse(y,x,\circ,e) \wedge is_right_inverse(y,x,\circ,e)

"Definition of two-sided inverse" (*****)

Let X be a set
Let \circ be a binary operation on X
Let x be an element of X
Let y be an element of X
Let e be an element of X
Suppose is_identity(e,\circ)
Suppose is_inverse(y,x,\circ,e)
Then y\circ x = e
Then x\circ y = e

"Definition of left distributivity" (*****)

Let X be a set
Let \circ be a binary operation on X
Let \square be a binary operation on X
Definition: left_distributes_over(\circ,\square) ⟷ \forall x\in X \forall y\in X \forall z\in X  x\circ(y\square z) = (x\circ y)\square(x\circ z)

"Definition of left distributivity" (*****)

Let X be a set
Let \circ be a binary operation on X
Let \square be a binary operation on X
Let x be an element of X
Let y be an element of X
Let z be an element of X
Suppose left_distributes_over(\circ,\square)
Then x\circ(y\square z) = (x\circ y)\square(x\circ z)

"Definition of right distributivity" (*****)

Let X be a set
Let \circ be a binary operation on X
Let \square be a binary operation on X
Definition: right_distributes_over(\circ,\square) ⟷ \forall x\in X \forall y\in X \forall z\in X  (x\square y)\circ z = (x\circ z)\square(y\circ z)

"Definition of right distributivity" (*****)

Let X be a set
Let \circ be a binary operation on X
Let \square be a binary operation on X
Let x be an element of X
Let y be an element of X
Let z be an element of X
Suppose right_distributes_over(\circ,\square)
Then (x\square y)\circ z = (x\circ z)\square(y\circ z)

"Definition of two-sided distributivity" (*****)

Let X be a set
Let \circ be a binary operation on X
Let \square be a binary operation on X
Definition: distributes_over(\circ,\square) ⟷ \forall x\in X \forall y\in X \forall z\in X  x\circ(y\square z) = (x\circ y)\square(x\circ z) \wedge (y\square z)\circ x = (y\circ x)\square(z\circ x)

"Higher-level definition of two-sided distributivity" (*****)

Let X be a set
Let \circ be a binary operation on X
Let \square be a binary operation on X
Definition: distributes_over(\circ,\square) ⟷ left_distributes_over(\circ,\square) \wedge right_distributes_over(\circ,\square)

"Definition of two-sided distributivity" (*****)

Let X be a set
Let \circ be a binary operation on X
Let \square be a binary operation on X
Let x be an element of X
Let y be an element of X
Let z be an element of X
Suppose distributes_over(\circ,\square)
Then x\circ(y\square z) = (x\circ y)\square(x\circ z)
Then (y\square z)\circ x = (y\circ x)\square(z\circ x)


PROPERTIES OF SET-THEORETIC BINARY OPERATIONS

"Intersection is commutative -- higher level" (*****)

Then is_commutative(\cap)

Comment: I'm assuming that in any given context type inference will understand that \cap is a binary operation on the power set of some suitable set X. I haven't given the context here, because in order to do so I would have to say that commutativity is a property of \cap and the power set of X, but I feel that it should be a property just of binary operations, since the set on which an operation operates is already part of the definition of the operation.

"Intersection is associative -- higher level" (*****)

Then is_associative(\cap)

"The ground set is an identity for intersection -- higher level" (*****)

Let X be a set
Then is_identity(X,\cap)


"Union is commutative -- higher level" (*****)

Then is_commutative(\cup)

"Union is associative -- higher level" (*****)

Then is_associative(\cup)

"The empty set is an identity for union -- higher level" (*****)

Then is_identity(\emptyset,\cup)


"Intersection distributes over union" (*****)

Then distributes_over(\cap,\cup)

"Union distributes over intersection" (*****)

Then distributes_over(\cup,\cap)


# Real Inner Product

(Comments by Angeliki: 

Comment 1: Need to return to add prerequisites like vector spaces and norm

Comment 2: Adding the real inner product for now, but would like to generalise for any field at some point.
Perhaps something to discuss.

Comment 3: I am not satisfied with my definition below, given that we are lacking a type system. Something to revisit.

Comment 4: symbols for different products such as \cdot and * perhaps to revisit

Comment 5: I assume we already have the norm defined and denoted by  \|  \|

Comment 6: shall we write the zero vector with different notation instead of just 0? I write it as \vec{0})

“Definition of real inner product” (real_inner_product_def)

Let V be a real vector space 
Let u be an element of V
Let v be an element of V
Let w be an element of V
Let a be a real number 

Define \< . , . \> to be a map from V \times V to the real field \R
so that
\<u , v \> = \< v, u \>  \and
 \<u, u \> \geq 0  \and
 \<u, u \> = 0 \iff u =0  \and
  \<a \cdot u, w \> = a * \<u, w \>  \and 
\<u + v, w\> = \<u, w \> + \<v, w \> \and
\| u \| = \sqrt{ \< u, u \>}



“The real inner product of any vector with the zero vector is zero”    (inner_zero_left)

Let V be a real vector space 
Let u be an element of V
Let \vec{0} be the zero vector of V

Then \< \vec{0} , u  \>= 0
  
“Summation in the first component of inner product” (inner_sum_left)

Let A be a set
Let V be a real vector space
Let f be a function from A to V
Let y be an element of V

Then  \< (\Sum. x \in A. f (x)),  y  \> = \Sum. x \in A.  \< f (x),  y \>
 
“Linearity in the second argument”  (inner_add_right,  inner_scaleR_right)

Let V be a real vector space 
Let u be an element of V
Let v be an element of V
Let w be an element of V 
Let a be a real number 

Then \< u,  v+ w\> = \<u, v \> + \<u, w \>  \and

\<u, a \cdot w\> =  a * \<  u, w \>
  
        “Cauchy-Schwarz Inequality”  (Cauchy_Schwarz_ineq)

Let V be a real vector space 
Let u be an element of V
Let v be an element of V
  
Then \<u, v \>^2 \leq  \<u, u \>* <\ v, v \>“

 “Cauchy-Schwarz Inequality considering norms” (Cauchy_Schwarz_ineq2)
  
Let V be a real vector space 
Let u be an element of V
Let v be an element of V
 
Then \<u, v\> \leq \| u \|* \| v\|








# Topological spaces (by Bill)
Note by Angeliki: made minor changes in notation

"Definition of open_in for a topological space"

Let $X$ be a set
Let $\tau$ be a topology on $X$
Let $\tilde{X} := (X, \tau)$ be a topological space
Define $open_in(U, \tilde{X}) := U \in \tau$

Low-priority pointer: 'by the definition of open sets'.
   
"Definition of closed_in for a topological space"

Let $X$ be a set
Let $\tau$ be a topology on $X$
Let $\tilde{X} := (X, \tau)$ be a topological space
Define $closed_in(F, \tilde{X}) := open_in(X \setminus F, \tilde{X})$

Low-priority pointer: 'by the definition of closed sets'.

Comment: It might be useful to have an alternative definition that F is closed if its complement belongs to \tau.

"Open set iff closed complement"

Let $X$ be a set
Let $\tau$ be a topology on $X$
Let $\tilde{X} := (X, \tau)$ be a topological space
Then $open_in(U, \tilde{X})$
iff $closed_in(X \setminus U, \tilde{X}$

Pointer: 'since a set is closed if and only if its complement is open'.

"Empty set is open in a topological space"

Let $X$ be a set
Let $\tau$ be a topology on $X$
Let $\tilde{X} := (X, \tau)$ be a topological space
Then $open_in(\emptyset, \tilde{X})$

Pointer: 'since the empty set is open'.

"Empty set is closed in a topological space"

Let $X$ be a set
Let $\tau$ be a topology on $X$
Let $\tilde{X} := (X, \tau)$ be a topological space
Then $closed_in(\emptyset, \tilde{X})$

Pointer: 'since the empty set is closed'.

"Underlying set of topological space is open"

Let $X$ be a set
Let $\tau$ be a topology on $X$
Let $\tilde{X} := (X, \tau)$ be a topological space
Then $open_in(X, \tilde{X})$

Pointer: 'since $X$ is open in itself'.

"Underlying set of topological space is closed"

Let $X$ be a set
Let $\tau$ be a topology on $X$
Let $\tilde{X} := (X, \tau)$ be a topological space
Then $closed_in(X, \tilde{X})$

Pointer: 'since $X$ is closed in itself'.

"Empty set is element of a topology on a topological space"

Let $X$ be a set
Let $\tau$ be a topology on $X$
Then $\emptyset \in \tau$

Pointer: 'since the empty set belongs to $\tau$'.

"Underlying set of topological space is element of its topology"

Let $X$ be a set
Let $\tau$ be a topology on $X$
Let $\tilde{X} := (X, \tau)$ be a topological space
Then $X \in \tau$

Pointer: 'since $X$ belongs to $\tau$'.

"Intersection of open sets is open"

Let $X$ be a set
Let $\tau$ be a topology on $X$
Let $\tilde{X} := (X, \tau)$ be a topological space
If $open_in(U, \tilde{X})$ and $open_in(V, \tilde{X})$
then $open_in(U \cap V, \tilde{X})$

Pointer: 'since the intersection of two open sets is open'.

"Finite intersection of open sets is open"

Let $\Gamma$ be a set
Suppose $\Gamma$ is finite
Let $U : \Gamma \to power_set(X)$
If $\forall \gamma \in \Gamma . open_in(U(\gamma), \tilde{X})$
then $open_in(\bigcap_{\gamma\in\Gamma} U(\gamma), \tilde{X})$

Pointer: 'since the intersection of finitely many open sets is open'.

"Finite union of closed sets is closed"

Let $\Gamma be a set
Suppose $\Gamma$ is finite
Let $F : \Gamma \to power_set(X)$
If $\forall \gamma \in \Gamma . closed_in(F(\gamma), \tilde{X})$
then $closed_in(\bigcup_{\gamma\in\Gamma} F(\gamma), \tilde{X})$

Pointer: 'since the union of finitely many closed sets is closed'.

"Union of open sets is open"

Let $\Gamma$ be a set
Let $U : \Gamma \to power_set(X)$
If $\forall \gamma \in \Gamma . open_in(U(\gamma), \tilde{X})$
then $open_in(\bigcup_{\gamma\in\Gamma} U(\gamma), \tilde{X})$

Pointer: 'since a union of open sets is open'.

"Intersection of closed sets is closed"

Let $\Gamma$ be a set
Let $F : \Gamma \to power_set(X)$
If $\forall \gamma \in \Gamma . closed_in(F(\gamma), \tilde{X})$
then $closed_in(\bigcap_{\gamma\in\Gamma} F(\gamma), \tilde{X})$ 

Pointer: 'since an intersection of closed sets is closed'.
